function dfa_() {this.getAverage = function (data) {average=0;deviation=0;minimum=data[0][0];maximum=data[0][0];sx=0;sx2=0;n=data.length;for (i=0;core.LT(i,data.length);i=core.add(i,1)) {if (core.equal(core.type(data[i]),"undefined")) {continue;};if (core.equal(core.type(data[i]),"number")) {x=data[i];} else {x=data[i][0];};if (core.equal(core.type(x),"number")) {if (core.equal(core.type(minimum),"undefined")) {minimum=x;};if (core.equal(core.type(maximum),"undefined")) {maximum=x;};if (core.GT(minimum,x)) {minimum=x;};if (core.LT(maximum,x)) {maximum=x;};sx=core.add(sx,x);sx2=core.add(sx2,core.mul(x,x));};};average=core.div(sx,n);deviation=math.sqrt(core.div((core.sub(sx2,core.div((core.mul(sx,sx)),n))),(core.sub(n,1))));error=core.div(deviation,math.sqrt(n));returnObject={"average": average,"deviation": deviation,"error": error,"minimum": minimum,"maximum": maximum,"n": n};return (returnObject);};this.toLog10 = function (data) {n=data.length;log10Data=[];for (i=0;core.LT(i,data.length);i=core.add(i,1)) {if (core.equal(core.type(data[i]),"undefined")) {continue;};if (core.equal(core.type(data[i]),"number")) {x=data[i];log10Data.push([x]);} else {x=data[i][0];y=data[i][1];log10Data.push([x,y]);};};return (log10Data);};this.getLsqr = function (data,begin,end) {dimData=core.dim(data);dimI=dimData[0];dimJ=dimData[1];if (core.equal(core.type(begin),"undefined")) {begin=0;};if (core.equal(core.type(end),"undefined")) {end=dimI;};x=0.0;y=0.0;sx=0.0;sy=0.0;sxy=0.0;sx2=0.0;sy2=0.0;n=0;if (core.equal(core.type(begin),"undefined")) {begin=0;};if (core.equal(core.type(end),"undefined")) {end=core.sub(dimI,1);};for (i=begin;core.LE(i,end);i=core.add(i,1)) {if (core.equal(dimJ,2)) {x=data[i][0];y=data[i][1];} else {x=i;y=data[i][0];};if (core.equal(core.type(x),"undefined")) {continue;};if (core.equal(core.type(y),"undefined")) {continue;};sx=core.add(sx,x);sy=core.add(sy,y);sxy=core.add(sxy,core.mul(x,y));sx2=core.add(sx2,core.mul(x,x));sy2=core.add(sy2,core.mul(y,y));n=core.add(n,1);};if (core.equal(n,0)) {return ([[0],[0],[0]]);};m1=[[n,sx],[sx,sx2]];m2=[[sy],[sxy]];ab=core.div(m2,m1);r2=core.div((core.power((core.sub(sxy,core.mul(sx,(core.div(sy,n))))),2)),(core.mul((core.sub(sx2,core.div((core.mul(sx,sx)),n))),(core.sub(sy2,core.div((core.mul(sy,sy)),n))))));return ([[ab[0][0]],[ab[1][0]],[r2]]);};this.getCumulativeSum = function (data,minusAverage) {if (core.equal(core.type(minusAverage),"undefined")) {minusAverage=false;};n=core.length(data);y=core.matrix(0,n);s=0.0;avgData=this.getAverage(data);for (i=0;core.LE(i,n);i=core.add(i,1)) {if (core.equal(core.type(data[i]),"undefined")) {continue;};if (core.equal(core.type(data[i]),"number")) {x=data[i];} else {x=data[i][0];};if (minusAverage) {s=core.add(s,(core.sub(x,avgData.average)));} else {s=core.add(s,x);};y[i]=s;};return (y);};this.getRScale = function (minbox,maxbox,boxratio) {rslen=core.add(core.div(math.log10(core.div(maxbox,minbox)),math.log10(boxratio)),1.5);rs=core.matrix(1,rslen);ir=1;rs[1]=minbox;for (n=2;core.logicalAND(core.LE(n,rslen),core.LT(rs[core.sub(n,1)],maxbox));ir=core.add(ir,1)) {if (core.GT((rw=core.add(core.mul(minbox,math.pow(boxratio,ir)),0.5)),rs[core.sub(n,1)])) {rs[n]=rw;n=core.add(n,1);};};n=core.sub(n,1);if (core.GT(this.rs[n],maxbox)) {n=core.sub(n,1);};returnObject={"rs": rs,"n": n};return (returnObject);};this.getPolyfit = function (x,y,start,boxsize,nfit) {beta=core.matrix(0,1,nfit);covar=core.matrix(0,1,nfit,1,nfit);covar0=core.matrix(0,1,nfit,1,nfit);indxc=core.matrix(0,1,nfit);indxr=core.matrix(0,1,nfit);ipiv=core.matrix(0,1,nfit);pboxsize=0;if (core.different(pboxsize,boxsize)) {;if (core.GT(pboxsize,boxsize)) {pboxsize=0;};;if (core.equal(pboxsize,0)) {for (j=1;core.LE(j,nfit);j=core.add(j,1)) {for (k=1;core.LE(k,nfit);k=core.add(k,1)) {covar0[j][k]=0.0;};};};for (i=core.add(pboxsize,1);core.LE(i,boxsize);i=core.add(i,1)) {for (j=1;core.LE(j,nfit);j=core.add(j,1)) {temp=x[i][j];for (k=1;core.LE(k,j);k=core.add(k,1)) {covar0[j][k]=core.add(covar0[j][k],core.mul(temp,x[i][k]));};};};for (j=2;core.LE(j,nfit);j=core.add(j,1)) {for (k=1;core.LT(k,j);k=core.add(k,1)) {covar0[k][j]=covar0[j][k];};};pboxsize=boxsize;};for (j=1;core.LE(j,nfit);j=core.add(j,1)) {beta[j]=ipiv[j]=0;for (k=1;core.LE(k,nfit);k=core.add(k,1)) {covar[j][k]=covar0[j][k];};};for (i=1;core.LE(i,boxsize);i=core.add(i,1)) {beta[1]=core.add(beta[1],(temp=y[core.add(i,start)]));beta[2]=core.add(beta[2],core.mul(temp,i));};if (core.GT(nfit,2)) {for (i=1;core.LE(i,boxsize);i=core.add(i,1)) {temp=y[core.add(i,start)];for (j=3;core.LE(j,nfit);j=core.add(j,1)) {beta[j]=core.add(beta[j],core.mul(temp,x[i][j]));};};};for (i=1;core.LE(i,nfit);i=core.add(i,1)) {big=0.0;for (j=1;core.LE(j,nfit);j=core.add(j,1)) {if (core.different(ipiv[j],1)) {for (k=1;core.LE(k,nfit);k=core.add(k,1)) {if (core.equal(ipiv[k],0)) {if (core.logicalOR(core.GE((temp=covar[j][k]),big),core.GE((temp=core.mul(-1,temp)),big))) {big=temp;irow=j;icol=k;};} else if (core.GT(ipiv[k],1)) {throw ("The matrix is singular");};};};};ipiv[icol]=core.add(ipiv[icol],1);if (core.different(irow,icol)) {for (j=1;core.LE(j,nfit);j=core.add(j,1)) {temp=covar[irow][j];covar[irow][j]=covar[icol][j];covar[icol][j]=temp;};temp=beta[irow];beta[irow]=beta[icol];beta[icol]=temp;};indxr[i]=irow;indxc[i]=icol;if (core.equal(covar[icol][icol],0.0)) {throw ("The matrix is singular");};pivinv=core.div(1.0,covar[icol][icol]);covar[icol][icol]=1.0;for (j=1;core.LE(j,nfit);j=core.add(j,1)) {covar[icol][j]=core.mul(covar[icol][j],pivinv);};beta[icol]=core.mul(beta[icol],pivinv);for (j=1;core.LE(j,nfit);j=core.add(j,1)) {if (core.different(j,icol)) {temp=covar[j][icol];covar[j][icol]=0.0;for (k=1;core.LE(k,nfit);k=core.add(k,1)) {covar[j][k]=core.sub(covar[j][k],core.mul(covar[icol][k],temp));};beta[j]=core.sub(beta[j],core.mul(beta[icol],temp));};};};chisq=0.0;if (core.LE(nfit,2)) {for (i=1;core.LE(i,boxsize);i=core.add(i,1)) {temp=core.sub(core.add(beta[1],core.mul(beta[2],i)),y[core.add(i,start)]);chisq=core.add(chisq,core.mul(temp,temp));};} else {for (i=1;core.LE(i,boxsize);i=core.add(i,1)) {temp=core.sub(core.add(beta[1],core.mul(beta[2],i)),y[core.add(i,start)]);for (j=3;core.LE(j,nfit);j=core.add(j,1)) {temp=core.add(temp,core.mul(beta[j],x[i][j]));};chisq=core.add(chisq,core.mul(temp,temp));};};return (chisq);};this.getDfa = function (seq,npts,nfit,rs,nr,sw) {if (core.equal(core.type(nfit),"undefined")) {nfit=2;};if (core.equal(core.type(sw),"undefined")) {sw=0;};mse=core.matrix(0,1,nr);x=core.matrix(0,1,rs[nr],1,nfit);for (i=1;core.LE(i,rs[nr]);i=core.add(i,1)) {x[i][1]=1.0;x[i][2]=i;for (j=3;core.LE(j,nfit);j=core.add(j,1)) {x[i][j]=core.mul(x[i][core.sub(j,1)],i);};};for (i=1;core.LE(i,nr);i=core.add(i,1)) {boxsize=rs[i];if (sw) {inc=1;stat=math.round(core.mul((core.add(core.sub(npts,boxsize),1)),boxsize));} else {inc=boxsize;stat=math.round(core.mul((core.div(npts,boxsize)),boxsize));};mse[i]=0.0;for (j=0;core.LE(j,core.sub(npts,boxsize));j=core.add(j,inc)) {mse[i]=core.add(mse[i],this.getPolyfit(x,seq,j,boxsize,nfit));};mse[i]=core.div(mse[i],stat);};return (mse);};};dfa = new dfa_();